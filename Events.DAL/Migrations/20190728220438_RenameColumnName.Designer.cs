// <auto-generated />
using System;
using Events.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Events.DAL.Migrations
{
    [DbContext(typeof(EventsDbContext))]
    [Migration("20190728220438_RenameColumnName")]
    partial class RenameColumnName
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.0-rtm-30799")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Events.BOL.Event", b =>
                {
                    b.Property<int>("Id");

                    b.Property<DateTime>("EventDate");

                    b.Property<string>("EventDescription")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("EventLocation")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("EventName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int>("EventTypeId");

                    b.HasKey("Id");

                    b.HasIndex("EventTypeId");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("Events.BOL.EventCatetogory", b =>
                {
                    b.Property<int>("EventTypeId");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("EventTypeId");

                    b.ToTable("EventCatetogory");
                });

            modelBuilder.Entity("Events.BOL.ReciepentsUsers", b =>
                {
                    b.Property<int>("ID");

                    b.Property<string>("ActiveRecipients")
                        .IsRequired();

                    b.Property<int>("EventId");

                    b.Property<bool>("IsEmailSent");

                    b.Property<string>("NotActiveRecipients")
                        .IsRequired();

                    b.HasKey("ID");

                    b.ToTable("ReciepentsUsers");
                });

            modelBuilder.Entity("Events.BOL.Event", b =>
                {
                    b.HasOne("Events.BOL.EventCatetogory", "EventCatetogory")
                        .WithMany("Event")
                        .HasForeignKey("EventTypeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
